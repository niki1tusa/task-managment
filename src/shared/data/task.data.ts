import { setHours, setMinutes } from 'date-fns';
import type { ITask } from '@/shared/types/task.types';
import { PROFILES } from './profile.data';

export const TASKS: ITask[] = [
	{
		id: '1',
		iconTheme: 'Plane',
		title: 'Travel App User Flow',
		due: {
			date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),
			startTime: setMinutes(setHours(new Date(), 9), 0),
			endTime: setMinutes(setHours(new Date(), 17), 0),
		},
		users: PROFILES,
		isCompleted: false,
		subTask: [
			{ id: '1', title: 'fix component', isCompleted: false },
			{ id: '2', title: 'fix component', isCompleted: false },
			{ id: '3', title: 'fix component', isCompleted: true },
		],
		comment: 1,
		img: 2,
		link: 2,
	},
	{
		id: '2',
		iconTheme: 'TabletSmartphone',
		title: 'Create next app',
		due: {
			date: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),
			startTime: setMinutes(setHours(new Date(), 10), 30),
			endTime: setMinutes(setHours(new Date(), 16), 0),
		},
		users: PROFILES,
		isCompleted: true,
		subTask: [
			{ id: '1', title: 'fix component', isCompleted: true },
			{ id: '2', title: 'fix component', isCompleted: true },
			{ id: '3', title: 'fix component', isCompleted: true },
		],
		comment: 3,
		img: 5,
		link: 2,
	},
	{
		id: '3',
		iconTheme: 'Bug',
		title: 'Debugging AI system search.',
		due: {
			date: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),
			startTime: setMinutes(setHours(new Date(), 13), 15),
			endTime: setMinutes(setHours(new Date(), 18), 0),
		},
		users: PROFILES,
		isCompleted: false,
		subTask: [
			{ id: '1', title: 'fix component', isCompleted: false },
			{ id: '2', title: 'fix component', isCompleted: true },
			{ id: '3', title: 'fix component', isCompleted: true },
			{ id: '4', title: 'fix component', isCompleted: true },
		],
		comment: 10,
		img: 1,
		link: 1,
	},
	{
		id: '4',
		iconTheme: 'Hammer',
		title: 'Mobile App Redesign',
		due: {
			date: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000),
			startTime: setMinutes(setHours(new Date(), 8), 45),
			endTime: setMinutes(setHours(new Date(), 15), 30),
		},
		users: PROFILES.slice(0, 2),
		isCompleted: false,
		subTask: [
			{ id: '1', title: 'create wireframes', isCompleted: true },
			{ id: '2', title: 'design mockups', isCompleted: true },
			{ id: '3', title: 'implement UI', isCompleted: false },
			{ id: '4', title: 'testing phase', isCompleted: false },
		],
		comment: 7,
		img: 3,
		link: 4,
	},
	{
		id: '5',
		iconTheme: 'Bug',
		title: 'Fix Authentication Issues',
		due: {
			date: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000),
			startTime: setMinutes(setHours(new Date(), 14), 0),
			endTime: setMinutes(setHours(new Date(), 18), 30),
		},
		users: PROFILES.slice(1, 3),
		isCompleted: true,
		subTask: [
			{ id: '1', title: 'identify bug source', isCompleted: true },
			{ id: '3', title: 'implement fix', isCompleted: true },
			{ id: '4', title: 'write tests', isCompleted: true },
		],
		comment: 5,
		img: 1,
		link: 2,
	},
	{
		id: '6',
		iconTheme: 'Plane',
		title: 'API Integration for Booking System',
		due: {
			date: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),
			startTime: setMinutes(setHours(new Date(), 11), 0),
			endTime: setMinutes(setHours(new Date(), 17), 30),
		},
		users: PROFILES,
		isCompleted: false,
		subTask: [
			{ id: '1', title: 'analyze API documentation', isCompleted: true },
			{ id: '2', title: 'create service layer', isCompleted: false },
			{ id: '3', title: 'implement endpoints', isCompleted: false },
			{ id: '4', title: 'error handling', isCompleted: false },
			{ id: '5', title: 'integration testing', isCompleted: false },
		],
		comment: 12,
		img: 4,
		link: 3,
	},
	{
		id: '7',
		iconTheme: 'Bot',
		title: 'Database Migration Script',
		due: {
			date: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000),
			startTime: setMinutes(setHours(new Date(), 7), 30),
			endTime: setMinutes(setHours(new Date(), 12), 0),
		},
		users: PROFILES.slice(0, 1),
		isCompleted: true,
		subTask: [
			{ id: '1', title: 'backup current database', isCompleted: true },
			{ id: '2', title: 'write migration script', isCompleted: true },
			{ id: '3', title: 'test on staging', isCompleted: true },
			{ id: '4', title: 'deploy to production', isCompleted: true },
		],
		comment: 2,
		img: 0,
		link: 1,
	},
	{
		id: '8',
		iconTheme: 'Bug',
		title: 'Performance Optimization',
		due: {
			date: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000),
			startTime: setMinutes(setHours(new Date(), 10), 0),
			endTime: setMinutes(setHours(new Date(), 16), 30),
		},
		users: PROFILES.slice(1, 2),
		isCompleted: false,
		subTask: [
			{ id: '1', title: 'profile application', isCompleted: false },
			{ id: '3', title: 'identify bottlenecks', isCompleted: false },
			{ id: '4', title: 'optimize queries', isCompleted: false },
			{ id: '5', title: 'implement caching', isCompleted: false },
			{ id: '6', title: 'load testing', isCompleted: false },
		],
		comment: 8,
		img: 2,
		link: 5,
	},
];
